"""
Stage 3 驗證器 - 座標系統轉換層 (v3.0 架構) (重構版本)

使用 StageValidator 基類統一驗證流程

Layer 2 驗證: 檢查驗證快照的合理性與架構合規性
信任 Layer 1 (Stage3Processor.run_validation_checks) 的詳細驗證結果

Author: Orbit Engine Refactoring Team
Date: 2025-10-12 (Phase 2 Refactoring)
Original: 2025-10-03
"""

from .base_validator import StageValidator
from typing import Tuple


class Stage3Validator(StageValidator):
    """
    Stage 3 驗證器 - 座標系統轉換層 (v3.0 架構: 純座標轉換)

    檢查項目:
    - v3.0 架構合規性 (純座標轉換，TEME → WGS84)
    - 5 項專用驗證框架執行情況
    - 座標轉換精度 (< 100m)
    - Skyfield 專業庫使用
    - IAU 標準合規性
    - 座標系統轉換配置
    """

    def __init__(self):
        super().__init__(
            stage_number=3,
            stage_identifier='stage3_coordinate_transformation'
        )

    def perform_stage_specific_validation(self, snapshot_data: dict) -> Tuple[bool, str]:
        """
        Stage 3 專用驗證

        檢查項目:
        - 座標轉換精度驗證
        - 座標系統轉換配置 (TEME → WGS84)
        - Skyfield 和 IAU 標準合規性
        - 衛星數量和座標點數量

        Args:
            snapshot_data: 驗證快照數據

        Returns:
            tuple: (validation_passed: bool, message: str)
        """
        # 檢查驗證結果是否存在
        if 'validation_results' not in snapshot_data:
            # 舊格式兼容: 檢查 status 和 data_summary
            return self._validate_legacy_format(snapshot_data)

        validation_results = snapshot_data['validation_results']

        # 檢查座標轉換精度
        checks = validation_results.get('checks', {})
        coord_accuracy_check = checks.get('coordinate_transformation_accuracy', {})
        avg_accuracy_m = coord_accuracy_check.get('average_accuracy_m', 999.9)

        # 精度驗證: < 100m (取樣模式下合理，對可見性分析足夠)
        if avg_accuracy_m >= 100.0:
            return False, f"❌ Stage 3 座標轉換精度不足: {avg_accuracy_m:.3f}m (要求 < 100m)"

        # 檢查數據摘要
        data_summary = snapshot_data.get('data_summary', {})
        satellites_processed = data_summary.get('satellites_processed', 0)
        coord_points = data_summary.get('coordinate_points_count', 0)

        # 使用工具方法檢查
        if satellites_processed == 0:
            return False, "❌ Stage 3 未處理任何衛星數據"

        if coord_points == 0:
            return False, "❌ Stage 3 未生成任何座標點"

        # 檢查 metadata 學術標準合規性
        metadata = snapshot_data.get('metadata', {})

        # Skyfield 專業庫使用確認 (支援兩種格式)
        skyfield_used = metadata.get('skyfield_used', metadata.get('skyfield_config', False))
        if not skyfield_used:
            return False, "❌ Stage 3 Skyfield 未使用"

        # IAU 標準合規標記 (支援兩種格式)
        iau_compliance = metadata.get('iau_compliant', metadata.get('iau_standard_compliance', False))
        if not iau_compliance:
            return False, "❌ Stage 3 IAU 標準合規標記缺失"

        # 檢查座標系統轉換配置 (支援兩種格式)
        source_frame = metadata.get('source_frame', '')
        target_frame = metadata.get('target_frame', '')

        # 舊格式：在 transformation_config 中
        if not source_frame or not target_frame:
            transformation_config = metadata.get('transformation_config', {})
            source_frame = transformation_config.get('source_frame', '')
            target_frame = transformation_config.get('target_frame', '')

        if source_frame != 'TEME':
            return False, f"❌ Stage 3 源座標系統錯誤: {source_frame} (期望: TEME)"

        if not target_frame.startswith('WGS84'):
            return False, f"❌ Stage 3 目標座標系統錯誤: {target_frame} (期望: WGS84*)"

        # 構建成功訊息
        validation_details = validation_results.get('validation_details', {})
        checks_passed = validation_details.get('checks_passed',
                                              validation_results.get('checks_passed', 0))
        checks_performed = validation_details.get('checks_performed',
                                                 validation_results.get('checks_performed', 0))

        status_msg = (
            f"✅ Stage 3 座標轉換檢查通過: "
            f"驗證框架 {checks_passed}/{checks_performed} 項通過 | "
            f"{satellites_processed}顆衛星 → {coord_points}個座標點 | "
            f"精度 {avg_accuracy_m:.3f}m | "
            f"[Skyfield✓, IAU✓, Grade_A✓, TEME→WGS84✓]"
        )

        return True, status_msg

    def _validate_legacy_format(self, snapshot_data: dict) -> Tuple[bool, str]:
        """
        驗證舊格式快照 (v3.0 架構兼容)

        Args:
            snapshot_data: 驗證快照數據

        Returns:
            tuple: (validation_passed: bool, message: str)
        """
        if snapshot_data.get('status') != 'success':
            status = snapshot_data.get('status', 'unknown')
            return False, f"❌ Stage 3 執行狀態異常: {status}"

        # v3.0 修正: Stage 3 只負責座標轉換，不涉及 3GPP 事件
        data_summary = snapshot_data.get('data_summary', {})
        satellites_processed = data_summary.get('satellites_processed', 0)
        coord_points = data_summary.get('coordinate_points_count', 0)

        if satellites_processed > 0 and coord_points > 0:
            return True, f"✅ Stage 3 座標轉換檢查通過: {satellites_processed}顆衛星 → {coord_points}個WGS84座標點"
        elif satellites_processed > 0:
            # 兼容舊格式: 只有衛星數量
            return True, f"✅ Stage 3 座標轉換檢查通過: 處理{satellites_processed}顆衛星"
        else:
            return False, f"❌ Stage 3 座標轉換數據不足: {satellites_processed}顆衛星"


# ============================================================
# 向後兼容函數 (保留原始接口)
# ============================================================

def check_stage3_validation(snapshot_data: dict) -> tuple:
    """
    Stage 3 專用驗證 - 座標系統轉換層 (v3.0 架構: 純座標轉換)

    ⚠️ 向後兼容函數: 內部調用 Stage3Validator 類

    檢查項目:
    - v3.0 架構合規性 (純座標轉換，TEME → WGS84)
    - 5 項專用驗證框架執行情況
    - 座標轉換精度 (< 100m)
    - Skyfield 專業庫使用
    - IAU 標準合規性
    - 座標系統轉換配置

    Args:
        snapshot_data: 驗證快照數據

    Returns:
        tuple: (validation_passed: bool, message: str)

    Raises:
        RuntimeError: 驗證器邏輯錯誤時拋出
    """
    try:
        validator = Stage3Validator()
        return validator.validate(snapshot_data)
    except Exception as e:
        # 🚨 Fail-Fast: 驗證邏輯異常時應該拋出
        raise RuntimeError(
            f"Stage 3 驗證器邏輯錯誤\n"
            f"這表示驗證器代碼本身有問題\n"
            f"詳細錯誤: {e}"
        ) from e
