"""
Stage 6 驗證器 - 研究數據生成與優化層 (重構版本)

使用 StageValidator 基類統一驗證流程

Layer 2 驗證: 檢查驗證快照的合理性與架構合規性
信任 Layer 1 (Stage6Processor.run_validation_checks) 的詳細驗證結果

Author: Orbit Engine Refactoring Team
Date: 2025-10-12 (Phase 2 Refactoring)
Original: 2025-10-03
"""

from .base_validator import StageValidator
from typing import Tuple


class Stage6Validator(StageValidator):
    """
    Stage 6 驗證器 - 研究數據生成與優化層

    檢查項目:
    - 5 項專用驗證框架執行情況
    - 3GPP NTN 事件檢測 (A3/A4/A5/D2)
    - ML 訓練數據生成
    - 動態池維持驗證
    - 實時決策性能
    """

    def __init__(self):
        super().__init__(
            stage_number=6,
            stage_identifier='stage6_research_optimization'
        )

    def perform_stage_specific_validation(self, snapshot_data: dict) -> Tuple[bool, str]:
        """
        Stage 6 專用驗證

        檢查項目:
        - 3GPP 事件檢測數量 (A3, A4, A5, D2)
        - ML 訓練數據生成
        - 池驗證通過狀態
        - 決策性能指標

        Args:
            snapshot_data: 驗證快照數據

        Returns:
            tuple: (validation_passed: bool, message: str)
        """
        # 檢查核心指標
        metadata = snapshot_data.get('metadata', {})
        events_detected = metadata.get('total_events_detected', 0)
        ml_samples = metadata.get('ml_training_samples', 0)
        pool_verified = metadata.get('pool_verification_passed', False)

        # 檢查 3GPP 事件
        gpp_events = snapshot_data.get('gpp_events', {})
        a3_count = len(gpp_events.get('a3_events', []))
        a4_count = len(gpp_events.get('a4_events', []))
        a5_count = len(gpp_events.get('a5_events', []))
        d2_count = len(gpp_events.get('d2_events', []))

        # 檢查 ML 訓練數據
        ml_training_data = snapshot_data.get('ml_training_data', {})
        dataset_summary = ml_training_data.get('dataset_summary', {})
        total_samples = dataset_summary.get('total_samples', 0)

        # 檢查實時決策性能
        decision_support = snapshot_data.get('decision_support', {})
        performance_metrics = decision_support.get('performance_metrics', {})
        avg_latency = performance_metrics.get('average_decision_latency_ms', 999.9)

        # 構建成功訊息（基類已處理驗證框架通過狀態）
        mode_indicator = "🧪 取樣模式" if self._is_sampling_mode(snapshot_data) else ""

        status_msg = (
            f"✅ Stage 6 研究數據生成檢查通過 {mode_indicator}: "
            f"3GPP事件 {events_detected}個 (A3:{a3_count}, A4:{a4_count}, A5:{a5_count}, D2:{d2_count}) | "
            f"ML樣本 {total_samples}個 | "
            f"池驗證 {'✓' if pool_verified else '✗'} | "
            f"決策延遲 {avg_latency:.1f}ms"
        )

        return True, status_msg

    def _is_sampling_mode(self, snapshot_data: dict) -> bool:
        """
        Stage 6 取樣模式判斷

        基於候選衛星數量判斷:
        - < 10 顆候選衛星 → 取樣模式
        - 或環境變數 ORBIT_ENGINE_TEST_MODE=1
        """
        pool_verification = snapshot_data.get('pool_verification', {})
        starlink_pool = pool_verification.get('starlink_pool', {})
        candidate_satellites_total = starlink_pool.get('candidate_satellites_total', 0)

        # 候選衛星少於 10 顆視為取樣模式
        if candidate_satellites_total < 10:
            return True

        # 檢查環境變數
        return super()._is_sampling_mode(snapshot_data)

    def _build_success_message(self, snapshot_data: dict, validation_results: dict) -> Tuple[bool, str]:
        """
        覆蓋基類方法，構建詳細的成功訊息

        Args:
            snapshot_data: 驗證快照數據
            validation_results: 驗證結果數據

        Returns:
            tuple: (True, detailed_message)
        """
        # 獲取驗證框架統計
        validation_details = validation_results.get('validation_details', {})
        checks_passed = validation_details.get('checks_passed',
                                              validation_results.get('checks_passed', 0))
        checks_performed = validation_details.get('checks_performed',
                                                 validation_results.get('checks_performed', 0))

        # 調用專用驗證獲取詳細訊息
        _, detailed_msg = self.perform_stage_specific_validation(snapshot_data)

        # 添加驗證框架信息
        full_msg = f"{detailed_msg} | 驗證框架 {checks_passed}/{checks_performed} 項通過"

        return True, full_msg


# ============================================================
# 向後兼容函數 (保留原始接口)
# ============================================================

def check_stage6_validation(snapshot_data: dict) -> tuple:
    """
    Stage 6 專用驗證 - 研究數據生成與優化層

    ⚠️ 向後兼容函數: 內部調用 Stage6Validator 類

    檢查項目:
    - 5 項專用驗證框架執行情況
    - 3GPP NTN 事件檢測 (A4/A5/D2)
    - ML 訓練數據生成
    - 動態池維持驗證
    - 實時決策性能

    Args:
        snapshot_data: 驗證快照數據

    Returns:
        tuple: (validation_passed: bool, message: str)
    """
    validator = Stage6Validator()
    return validator.validate(snapshot_data)
